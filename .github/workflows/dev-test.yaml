# Based on https://github.com/prettier/prettier/blob/master/.github/workflows/dev-test.yml
name: Dev

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *"
  push:
    branches:
      - main
      - development
  pull_request:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - "ubuntu-18.04"
          - "ubuntu-20.04"
          - "windows-2019"
        node-version:
          - 14
        e2e-tests: # TODO (Eli 10/5/20): figure out a more robust way to ensure all subfolders are covered (maybe using the fixture.meta flag and a pre-commit hook to ensure all tests have one...or with the file glob pattern...)
          - "tests/e2e/playback"
          - "tests/e2e/status"
          - "tests/e2e/waveforms"
          - "tests/e2e/settings"
          - "tests/e2e/basic_widgets"
          - "tests/e2e/plate_based_widgets"
        include:
          # only enable coverage on the fastest job
          - os: "ubuntu-20.04"
            node-version: "14"
            e2e-tests: "tests/e2e/status"
            IS_FASTEST_JOB: true
          - e2e-tests: "tests/e2e/status"
            IS_FASTEST_E2E_SUITE: true
    name: Node.js ${{ matrix.node-version }} on ${{ matrix.os }} for E2E test suite ${{ matrix.e2e-tests }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Set up Python for use with pre-commit
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Setup Node.js
        uses: actions/setup-node@v2.3.1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Display Language Dependency Versions
        run: |
          python --version
          pip --version
          node --version
          npm --version

      - name: Display Chrome version (Windows)
        if: matrix.IS_WINDOWS == true
        run: (Get-Item (Get-ItemProperty 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\chrome.exe').'(Default)').VersionInfo

      - name: Display Chrome version (Linux)
        if: runner.os == 'Linux'
        run: |
          google-chrome --version
          chromedriver --version

      - name: Cache node modules # https://docs.github.com/en/free-pro-team@latest/actions/guides/caching-dependencies-to-speed-up-workflows
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-node-modules
        with:
          path: ./.npm_cache
          key: ${{ matrix.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-

      - name: Cache Python modules # needed for pre-commit
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-python-modules
        with:
          path: ./.cache/pip
          key: ${{ matrix.os }}-${{ matrix.python-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/requirements-dev.txt') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-build-${{ env.cache-name }}-

      - name: Cache Pre-commit hooks
        uses: actions/cache@v2.1.6
        env:
          cache-name: cache-pre-commit-hooks
        if: matrix.IS_FASTEST_JOB == true
        with:
          path: ~/.precommit_cache # Eli (10/22/20): Having the pre-commit cache inside the repo creates problems with Pytest detecting test files inside the cache
          key: ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.node-version }}-build-${{ env.cache-name }}-

      - name: Install Node Dependencies and list installed python dev dependencies
        # not sure why CodeBuild fails without the --unsafe-perm flag for npm ci, but it seems to help when running the "prepare" scripts after the install https://stackoverflow.com/questions/18136746/npm-install-failed-with-cannot-run-in-wd
        run: |
          npm ci --unsafe-perm
          pip freeze

      - name: Run pre-commit hooks
        if: matrix.IS_FASTEST_JOB == true
        env:
          PRE_COMMIT_HOME: ~/.precommit_cache
        run: |
          pre-commit install
          pre-commit run -a

      - name: Confirm package builds correctly # Some tests rely on testing the built files in the dist folder, so make sure to do this before running the test suite
        run: npm run build

      - name: Run Unit Tests
        if: matrix.IS_FASTEST_E2E_SUITE == true
        run: npm run test:unit-no-prebuild -- --ci --verbose

      # - name: Run E2E Tests (Windows)
      #   if: matrix.IS_WINDOWS == true
      #   run: npx testcafe chrome:headless:emulation:width=1920;height=930;cdpPort=9223; ${{ matrix.e2e-tests }} --screenshots path=./tests/e2e/screenshots --app "npm run dev" --app-init-delay 35000

      - name: Run E2E Tests (Linux)
        if: runner.os == 'Linux'
        uses: CuriBio/testcafe-action@v0.0.4
        with:
          skip-install: true
          args: '"chrome:headless:emulation:width=1920;height=930;cdpPort=9223;" ${{ matrix.e2e-tests }} --screenshots path=./tests/e2e/screenshots --app ''node ./node_modules/@curi-bio/frontend-test-utils/src/check_engines.js && cross-env-shell NODE_ENV=development nuxt dev --spa'' --app-init-delay 45000'

      - name: Confirm Sphinx Docs build correctly
        # only check Sphinx docs build on the fastest job
        if: matrix.IS_FASTEST_JOB == true
        run: SPHINXOPTS="-W" make --directory=docs html # the -W flag treats warnings as errors to cause build failures

      - name: Confirm no modifications to the repository files occurred when running the test suite
        if: matrix.IS_FASTEST_JOB == true # only enable pre-commit on the fastest job
        env:
          PRE_COMMIT_HOME: ./.precommit_cache
        run: pre-commit run git-dirty -a

      - name: Upload coverage to Codecov
        # only upload coverage from fastest job
        if: matrix.IS_FASTEST_JOB == true
        uses: codecov/codecov-action@v1
        timeout-minutes: 1 # Tanner (8/11/20): once fundmental issue with codecov timeout is fixed, remove this line and the next
        continue-on-error: true
        with:
          file: ./tests/__coverage__/lcov.info
          flags: unittests
          env_vars: OS,NODE
          name: codecov-umbrella
          fail_ci_if_error: true

      - name: Archive visual regression
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: visual-regression-screenshots--${{ matrix.os }}--${{ matrix.node-version }}
          path: "tests/e2e/screenshots/**/*"
